from aiogram import Router, F
from aiogram.types import CallbackQuery

from services.database import add_expense
from services.cache import temp_data_cache

router = Router()

@router.callback_query(F.data.startswith("confirm_expense:"))
async def handle_expense_confirmation(callback: CallbackQuery):
    """
    Handles the callback from the confirmation buttons (Yes/No).
    """
    # Acknowledge the button press to remove the "loading" state on the user's side.
    await callback.answer()

    # Safely unpack the callback data
    try:
        _, action, data_str = callback.data.split(":", 2)
    except ValueError:
        # This will handle cases where the callback data is just "confirm_expense:no"
        _, action = callback.data.split(":", 1)
        data_str = None

    if action == "yes" and data_str:
        # data_str is now the key to our cache
        expense_data = temp_data_cache.get(data_str)

        if not expense_data:
            # This can happen if the bot was restarted after the button was sent
            await callback.message.edit_text(
                "üòï –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É—Å—Ç–∞—Ä–µ–ª–∏. "
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –µ—â–µ —Ä–∞–∑.",
                reply_markup=None
            )
            return

        try:
            amount = float(expense_data['amount'])
            category = expense_data['category']

            # Add expense to the database
            add_expense(amount=amount, category=category)

            # Edit the original message to show success and remove the keyboard
            await callback.message.edit_text(
                f"‚úÖ –Ø –≤–∞—Å –ø–æ–Ω—è–ª. –í–Ω–µ—Å —Ä–∞—Å—Ö–æ–¥ –Ω–∞ —Å—É–º–º—É **{amount:.2f}** –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é **'{category}'**."
            )
        except (KeyError, ValueError) as e:
            await callback.message.edit_text(
                f"üòï –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {e}\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
                reply_markup=None # Remove keyboard on error
            )

    elif action == "no":
        # Edit the original message to ask for clarification and remove the keyboard
        await callback.message.edit_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ —Ç–æ–≥–¥–∞, —á—Ç–æ –≤—ã –∏–º–µ–ª–∏ –≤ –≤–∏–¥—É.",
            reply_markup=None # Remove keyboard
        )
    else:
        # Fallback for malformed callback data
        await callback.message.edit_text(
            "üòï –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∑–∞–Ω–æ–≤–æ.",
            reply_markup=None # Remove keyboard
        )
